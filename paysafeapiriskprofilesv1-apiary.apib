FORMAT: 1A
HOST: https://api.test.paysafe.com/riskprofiles/

# Paysafe Risk Check API

**QUESTIONS**
- I see field descriptions referring to business owners (e.g., business owner's address). Should this be consumer?
- The Account Management API uses *yearsAtAddress* (and not *monthsAtAddress*)
- Max for *phone* element is 15; for other APIs it's 40.
- in the AML Assist response, what is the "credit file" that is being referred to?
- for AML, have to explain difference between a single source and a dual source being hit.
- in the EID Compare response, object has "atomicScore" but example has "atomicScores". Also, table says it is a string but the JSON example looks like it is an object that can have multiple values.
- Confluence page has a "providerResponse" object; but code sample has "providerResponses". I assume the code sample is correct.

# Release Notes

| Version   | Date          | Details |
|---        |---            |---      |
| 1.0       | October 2018  | <ul><li>Document Release</li></ul>     |

# Overview

**Rewrite overview content** 

The Paysafe Risk Check API  ... 


<a name="apikey" title="Authentication"></a>
# Authentication

In order for you to use the Paysafe REST API, Paysafe must first set you up on their system and provide you with an API key. Your API key looks something like this:

  * Key Username – MerchantXYZ
  * Key Password – B-tst1-0-51ed39e4-312d02345d3f123120881dff9bb4020a89e8ac44cdfdcecd702151182fdc952272661d290ab2e5849e31bb03deede7e

Note this is not the same as your Merchant Back Office username and password.
The case-sensitive API key is sent using HTTP Basic Authentication. To use HTTP Basic Authentication, you must send the API key credentials using the Authorization header with every request. The Authorization header is constructed as follows:

  1. The Key Username and Key Password are combined into a string separated by a colon, e.g.,“Key Username:Key Password”.
  2. The resulting string literal is then encoded using Base64.
  3. The authorization method and a space (i.e., “Basic”) are then put before the encoded string.

For example, using the Key Username and Password examples above, the header is formed as follows:

``Authorization: Basic
TWVyY2hhbnRYWVo6Qi10c3QxLTAtNTFlZDM5ZTQtMzEyZDAyMzQ1ZDNmMTIzMTIwODgxZGZmOWJiNDAyMGE4OWU4YWM0NGNkZmRjZWNkNzAyMTUxMTgyZmRjOTU yMjcyNjYxZDI5MGFiMmU1ODQ5ZTMxYmIwM2RlZWRlN2U=``

For additional details, please refer to [http://en.wikipedia.org/wiki/Basic_access_authentication](http://en.wikipedia.org/wiki/Basic_access_authentication).

  **Note:** Your Production API key will be different from your Test API key. Contact your account manager for details. You must keep your API keys safe and ensure that it is used appropriately for your needs.

# URLs 

**NOTE:** The Confluence page for this API has the v1 inverted, so "/v1/riskprofiles/" ... this seems backward from our standard practice, which I have used below.

##  Test URL
In order to test your integration with Paysafe, use the following Test URL:

`https://api.test.paysafe.com`

For example:

`https://api.test.paysafe.com/riskprofiles/v1/`

## Production URL
In order to process live requests with Paysafe, use the following Production URL:

`https://api.paysafe.com`

For example:

`https://api.paysafe.com/riskprofiles/v1/`

<a name="globalinvalidcharacters" title="Global Invalid Characters"></a>
# Global Invalid Characters

**Verify that this holds for this new API.**

You must not include any of the characters in the following table as values in any of your request parameters. If you do, your request will result in an error.

|    Character    |    HEX    |    Description                     |
|-----------------|-----------|------------------------------------|
| "               | 22        | Double quotes (or speech marks)    |
| ;               | 3B        | Semicolon                          |
| ^               | 5E        | Caret, circumflex                  |
| *               | 2A        | Asterisk                           |
| <               | 3C        | Less than (or open angled bracket) |
| /               | 2F        | Slash or divide                    |
| [               | 5B        | Opening bracket                    |
| ]               | 5D        | Closing bracket                    |
| \               | 5C        | Backslash                          |

# API

**NOTE:** The endpoints seem odd. Verify what is before their "/v1/riskprofiles/" in Confluence. E.g., see https://api.test.paysafe.com/cardpayments/v1/accounts/account_id/auths/auth_id in Card Payments API.

The Risk Check API allows merchants to ...

The following request types are supported:

**Update hyperlinks once correct sections are created.**

  * [Risk Checks](#profilesrequest)
  * [Rerun Failed Risk Checks](#addressesrequest)
  
**API Endpoints** 

 - `https://api.paysafe.com/riskprofiles/v1`
 - `https://api.paysafe.com/riskprofiles/v1/risk_profile_id/rerunFailedChecks`

**Resource Patterns**

**FIND OUT IF THERE ARE GETS FOR THESE ENDPOINTS**

|Endpoint URL                                       |Description                            |Action |
|---                                                |---                                    |---    |
|/riskprofiles                                      |Run a Risk Check on a Consumer         |POST   |
|/riskprofiles/{risk_profile_id}/rerunFailedChecks  |Rerun a Failed Risk Check              |POST   |


# Getting Started

You can use the Risk Check API to Click [here](https://developer.paysafe.com/en/rest-api/riskcheck/using-the-api/scenarios/) for some common scenarios for using the Risk Check API.

**MAKE SURE THE LINK ABOVE IS ACCURATE FOR FLARE CONTENT IN DC.**


# Testing Instructions

The Paysafe Test environment can be used to test websites or applications. It is important to make sure that your systems are working correctly before going into a live environment. Click [here](https://developer.paysafe.com/en/rest-api/riskcheck/test-and-go-live/testing-instructions/) for details of using the test environment.

**MAKE SURE THE LINK ABOVE IS ACCURATE FOR FLARE CONTENT IN DC.**

<a name="isostandards" title="ISO Standards"></a>
# ISO Standards

<a name="provincecodes" title="Province Codes"></a>
## Province Codes

|Province               |Code   |
|---                    |---    |
|Alberta                |AB     |
|British Columbia       |BC     |
|Manitoba               |MB     |
|New Brunswick          |NB     |
|Newfoundland           |NL     |
|Nova Scotia            |NS     |
|Northwest Territories  |NT     |
|Nunavut                |NU     |
|Ontario                |ON     |
|Prince Edward Island   |PE     |
|Quebec                 |QC     |
|Saskatchewan           |SK     |
|Yukon                  |YT     |

<a name="statecodes" title="State Codes"></a>
## State Codes

|State                  |Code   |
|---                    |---    |
|Alabama                |AL     |
|Alaska                 |AK     |
|American Samoa         |AS     |
|Arizona                |AZ     |
|Arkansas               |AR     |
|Armed Forces Americas  |AA     |
|Armed Forces Europe    |AE     |
|Armed Forces Pacific   |AP     |
|California             |CA     |
|Colorado               |CO     |
|Connecticut            |CT     |
|Delaware               |DE     |
|District of Columbia   |DC     |
|Florida                |FL     |
|Georgia                |GA     |
|Guam                   |GU     |
|Hawaii                 |HI     |
|Idaho                  |ID     |
|Illinois               |IL     |
|Indiana                |IN     |
|International          |IT     |
|Iowa                   |IA     |
|Kansas                 |KS     |
|Kentucky               |KY     |
|Louisiana              |LA     |
|Maine                  |ME     |
|Maryland               |MD     |
|Massachusetts          |MA     |
|Michigan               |MI     |
|Minnesota              |MN     |
|Mississippi            |MS     |
|Missouri               |MO     |
|Montana                |MT     |
|Nebraska               |NE     |
|Nevada                 |NV     |
|New Hampshire          |NH     |
|New Jersey             |NJ     |
|New Mexico             |NM     |
|New York               |NY     |
|North Carolina         |NC     |
|North Dakota           |ND     |
|Northern Mariana Is.   |MP     |
|Ohio                   |OH     |
|Oklahoma               |OK     |
|Oregon                 |OR     |
|Palau                  |PW     |
|Pennsylvania           |PA     |
|Puerto Rico            |PR     |
|Rhode Island           |RI     |
|South Carolina         |SC     |
|South Dakota           |SD     |
|Tennessee              |TN     |
|Texas                  |TX     |
|U.S. Virgin Islands    |VI     |
|United States Federal  |US     |
|Utah                   |UT     |
|Vermont                |VT     |
|Virginia               |VA     |
|Washington             |WA     |
|West Virginia          |WV     |
|Wisconsin              |WI     |
|Wyoming                |WY     |


<a name="countrycodes" title="Country Codes"></a>
## Country Codes
| Country                       | Code |
|---                                |---       |
| Afghanistan                       | AF |
| Åland Islands                     | AX |
| Albania                           | AL |
| Algeria                           | DZ |
| American Samoa                    | AS |
| Andorra                           | AD |
| Angola                            | AO |
| Anguilla                          | AI |
| Antarctica                        | AQ |
| Antigua and Barbuda               | AG |
| Argentina                         | AR |
| Armenia                           | AM |
| Aruba                             | AW |
| Australia                         | AU |
| Austria                           | AT |
| Azerbaijan                        | AZ |
| Bahamas                           | BS |
| Bahrain                           | BH |
| Bangladesh                        | BD |
| Barbados                          | BB |
| Belarus                           | BY |
| Belgium                           | BE |
| Belize                            | BZ |
| Benin                             | BJ |
| Bermuda                           | BM |
| Bhutan                            | BT |
| Bolivia                           | BO |
| Bonaire, Sint Eustatius and Saba  | BQ |
| Bosnia and Herzegovina            | BA |
| Botswana                          | BW |
| Bouvet Island                     | BV |
| Brazil                            | BR |
| British Indian Ocean Territory    | IO |
| Brunei Darussalam                 | BN |
| Bulgaria                          | BG |
| Burkina Faso                      | BF |
| Burundi                           | BI |
| Cambodia                          | KH |
| Cameroon                          | CM |
| Canada                            | CA |
| Cape Verde                        | CV |
| Cayman Islands                    | KY |
| Central African Republic          | CF |
| Chad                              | TD |
| Chile                             | CL |
| China                             | CN |
| Christmas Island                  | CX |
| Cocos (Keeling) Islands           | CC |
| Colombia                          | CO |
| Comoros                           | KM |
| Congo                             | CG |
| Congo, Democratic Republic of     | CD |
| Cook Islands                      | CK |
| Costa Rica                        | CR |
| Côte D’Ivoire                     | CI |
| Croatia                           | HR |
| Cuba                              | CU |
| Curaçao                           | CW |
| Cyprus                            | CY |
| Czech Republic                    | CZ |
| Denmark                           | DK |
| Djibouti                          | DJ |
| Dominica                          | DM |
| Dominican Republic                | DO |
| Ecuador                           | EC |
| Egypt                             | EG |
| El Salvador                       | SV |
| Equatorial Guinea                 | GQ |
| Eritrea                           | ER |
| Estonia                           | EE |
| Ethiopia                          | ET |
| Falkland Islands                  | FK |
| Faroe Islands                     | FO |
| Fiji                              | FJ |
| Finland                           | FI |
| France                            | FR |
| French Guiana                     | GF |
| French Polynesia                  | PF |
| French Southern Territories       | TF |
| Gabon                             | GA |
| Gambia                            | GM |
| Georgia                           | GE |
| Germany                           | DE |
| Ghana                             | GH |
| Gibraltar                         | GI |
| Greece                            | GR |
| Greenland                         | GL |
| Grenada                           | GD |
| Guadeloupe                        | GP |
| Guam                              | GU |
| Guatemala                         | GT |
| Guernsey                          | GG |
| Guinea                            | GN |
| Guinea-Bissau                     | GW |
| Guyana                            | GY |
| Haiti                             | HT |
| Heard and McDonald Islands        | HM |
| Honduras                          | HN |
| Hong Kong                         | HK |
| Hungary                           | HU |
| Iceland                           | IS |
| India                             | IN |
| Indonesia                         | ID |
| Iran  (Islamic Republic of)       | IR |
| Iraq                              | IQ |
| Ireland                           | IE |
| Isle of Man                       | IM |
| Israel                            | IL |
| Italy                             | IT |
| Jamaica                           | JM |
| Japan                             | JP |
| Jersey                            | JE |
| Jordan                            | JO |
| Kazakhstan                        | KZ |
| Kenya                             | KE |
| Kiribati                          | KI |
| Korea, Democratic People’s Republic | KP |
| Korea, Republic of                | KR |
| Kuwait                            | KW |
| Kyrgyzstan                        | KG |
| Lao People’s Democratic Republic  | LA |
| Latvia                            | LV |
| Lebanon                           | LB |
| Lesotho                           | LS |
| Liberia                           | LR |
| Libyan Arab Jamahiriya            | LY |
| Liechtenstein                     | LI |
| Lithuania                         | LT |
| Luxembourg                        | LU |
| Macau                             | MO |
| Macedonia                         | MK |
| Madagascar                        | MG |
| Malawi                            | MW |
| Malaysia                          | MY |
| Maldives                          | MV |
| Mali                              | ML |
| Malta                             | MT |
| Marshall Islands                  | MH |
| Martinique                        | MQ |
| Mauritania                        | MR |
| Mauritius                         | MU |
| Mayotte                           | YT |
| Mexico                            | MX |
| Micronesia, Federated States of   | FM |
| Moldova, Republic of              | MD |
| Monaco                            | MC |
| Mongolia                          | MN |
| Montenegro                        | ME |
| Montserrat                        | MS |
| Morocco                           | MA |
| Mozambique                        | MZ |
| Myanmar                           | MM |
| Namibia                           | NA |
| Nauru                             | NR |
| Nepal                             | NP |
| New Caledonia                     | NC |
| New Zealand                       | NZ |
| Nicaragua                         | NI |
| Niger                             | NE |
| Nigeria                           | NG |
| Niue                              | NU |
| Norfolk Island                    | NF |
| Northern Mariana Islands          | MP |
| Norway                            | NO |
| Oman                              | OM |
| Pakistan                          | PK |
| Palau                             | PW |
| Palestinian Territory, Occupied   | PS |
| Panama                            | PA |
| Papua New Guinea                  | PG |
| Paraguay                          | PY |
| Peru                              | PE |
| Philippines                       | PH |
| Pitcairn                          | PN |
| Poland                            | PL |
| Portugal                          | PT |
| Puerto Rico                       | PR |
| Qatar                             | QA |
| Reunion                           | RE |
| Romania                           | RO |
| Russian Federation                | RU |
| Rwanda                            | RW |
| Saint Barthélemy                  | BL |
| Saint Helena                      | SH |
| Saint Kitts and Nevis             | KN |
| Saint Lucia                       | LC |
| Saint Martin                      | MF |
| Saint Vincent and the Grenadines  | VC |
| Samoa                             | WS |
| San Marino                        | SM |
| Sao Tome and Principe             | ST |
| Saudi Arabia                      | SA |
| Senegal                           | SN |
| Serbia                            | RS |
| Seychelles                        | SC |
| Sierra Leone                      | SL |
| Singapore                         | SG |
| Sint Maarten                      | SX |
| Slovakia (Slovak Republic)        | SK |
| Slovenia                          | SI |
| Solomon Islands                   | SB |
| Somalia                           | SO |
| South Africa                      | ZA |
| South Georgia and the South Sandwich Islands | GS |
| South Sudan                       | SS |
| Spain                             | ES |
| Sri Lanka                         | LK |
| St. Pierre and Miquelon           | PM |
| Sudan                             | SD |
| Suriname                          | SR |
| Svalbard and Jan Mayen Islands    | SJ |
| Swaziland                         | SZ |
| Sweden                            | SE |
| Switzerland                       | CH |
| Syrian Arab Republic              | SY |
| Taiwan                            | TW |
| Tajikistan                        | TJ |
| Tanzania, United Republic of      | TZ |
| Thailand                          | TH |
| The Netherlands                   | NL |
| Timor-Leste                       | TL |
| Togo                              | TG |
| Tokelau                           | TK |
| Tonga                             | TO |
| Trinidad and Tobago               | TT |
| Tunisia                           | TN |
| Turkey                            | TR |
| Turkmenistan                      | TM |
| Turks and Caicos Islands          | TC |
| Tuvalu                            | TV |
| Uganda                            | UG |
| Ukraine                           | UA |
| United Arab Emirates              | AE |
| United Kingdom                    | GB |
| United States                     | US |
| United States Minor Outlying Islands | UM |
| Uruguay                           | UY |
| Uzbekistan                        | UZ |
| Vanuatu                           | VU |
| Vatican City State (Holy See)     | VA |
| Venezuela                         | VE |
| Vietnam                           | VN |
| Virgin Islands (British)          | VG |
| Virgin Islands (U.S.)             | VI |
| Wallis and Futuna Islands         | WF |
| Western Sahara                    | EH |
| Yemen                             | YE |
| Zambia                            | ZM |
| Zimbabwe                          | ZW |

# Complex JSON Objects

<a name="amlassistobject" title="amlassist Object"></a>
## amlassist
|Element            |Type                                   |Description    |
|---                |---                                    |---            |
|id                 |string <br/>`length<=36`               |This is the *amlassist* ID generated for the request, returned in the response.|
|status             |enum                                   |This is the risk decision. See the [amlassist Decision Matrix Table](#amlassisttable) for details. |
|response           |[response](#amlassistresponseobject)   |   |
|error              |[error](#errorobject)                  |These are error details in case of any errors occurring while doing the vendor check. |

```apib
    {
        "id": "0f1266b9-ce28-4df2-bc3f-d4b746cc1ced",
        "status": "SUCCESS",
        "response": {
            "creditFileNumber": "65462",
            "creditFileGreaterThanThreeYearsOld": "True",
            "isSingleSourceHit": "True",
            "isDualSourceHit": "False",
            "isLastNameMatched": "True",
            "isFirstNameMatched": "True",
            "isMiddleNameMatched": "True",
            "isDateOfBirthMatch": "True",
            "isAddressCivicMatch": "True",
            "isAddressStreetNameMatch": "True",
            "isAddressCityMatch": "True",
            "isAddressPostalCodeMatch": "True",
            "isAddressProvinceMatch": "True",
            "creditFileCreationDate": {
                "day": "12",
                "month": "10",
                "year": "2010"
            },
            "numberOfTrades": "23",
            "familyName": "Roz",
            "singleSourceDecision": "True",
            "dualSourceDecision": null,
            "institutionName": "institute",
            "accountNumber": "45487852",
            "isNameAndDobMatch": "True",
            "isNameAndAddressMatch": "True",
            "isNameAndAccountNumberMatch": "True"
        }
    }
```

<a name="amlassisttable" title="AML Assist Decision Matrix Table"></a>
### AML Assist Decision Matrix Table
|Single Source          |Single Source Decision     | Dual Source           |Dual Source Decision   |Final Result |
|---                    |---                        |---                    |---                    |---            |
|Credit file found      |Fail                       |Trade info found       |Fail                   |FAIL           |
|Credit file found      |Fail                       |Trade info found       |Success                |SUCCESS        |
|Credit file found      |Success                    |Trade info not found   |Fail                   |SUCCESS        |
|Credit file not found  |Fail                       |Trade info found       |Fail                   |FAIL           |
|Credit file not found  |Fail                       |Trade info found       |Success                |SUCCESS        |
|Credit file not found  |Fail                       |Trade info not found   |Fail                   |FAIL   |   

<a name="amlassistresponseobject" title="AML Assist Response Object"></a>
## AML Assist response
|Element            |Type                               |Description    |
|---                |---                                |---            |
|creditFileNumber   |string                             |This is the credit file number retrieved from AML Assist. |
|isCreditFileGreaterThanThreeYearsOld   |boolean        |This indicates whether the credit file is greater than three years old.|
|isSingleSourceHit  |boolean                            |This indicates whether a single source has been hit. |
|isDualSourceHit                        | boolean       | This indicates whether a dual source has been hit. |
|isLastNameMatched                      | boolean       | This indicates whether the last name matched. |
|isFirstNameMatched                     | boolean       | This indicates whether the first name matched. |
|isMiddleNameMatched                    | boolean       | This indicates whether the middle name matched. |
|isDateOfBirthMatch                     | boolean       | This indicates whether the date of birth matched.  |
|isAddressCivicMatch                    | boolean       | This indicates whether the civic number of the address matched. |
|isAddressStreetNameMatch               | boolean       | This indicates whether the address street name matched. |
|isAddressCityMatch                     | boolean       | This indicates whether the address city matched. |
|isAddressPostalCodeMatch               | boolean       | This indicates whether the address postal code matched. |
|isAddressProvinceMatch                 | boolean       | This indicates whether the address province matched. |
|creditFileCreationDate                 | [creditFileCreationDate](#dateobject) | This is the date on which credit file was created. |
|numberOfTrades                         |integer        | This is the number of trades on credit file. Applicable if single source has been hit. |
|singleSourceDecision                   | boolean       | This indicates whether the decision was obtained from single source. Applicable if single source has been hit.|
|dualSourceDecision                     | boolean       | This indicates whether the decision was obtained from dual source. Applicable if dual source has been hit. |
|institutionName                        | string        | This is the institution name retrieved from the AML Assist output. Applicable if dual source has been hit. |
|accountNumber                          | string        | This is the account name retrieved from the AML Assist output. Applicable if dual source has been hit. |
|familyName                             | string        | This is the family name retrieved from the AML Assist output. Applicable if dual source has been hit.|
|isNameAndDobMatch                      | boolean       | This indicates whether the name and date of birth match. Applicable if dual source has been hit.|
|isNameAndAddressMatch                  | boolean       | This indicates whether the name and address match. Applicable if dual source has been hit. |
|isNameAndAccountNumberMatch            | boolean       | This indicates whether the name and account number match. Applicable if dual source has been hit.|

```apib
    {
        "creditFileNumber": "65462",
        "creditFileGreaterThanThreeYearsOld": "True",
        "isSingleSourceHit": "True",
        "isDualSourceHit": "False",
        "isLastNameMatched": "True",
        "isFirstNameMatched": "True",
        "isMiddleNameMatched": "True",
        "isDateOfBirthMatch": "True",
        "isAddressCivicMatch": "True",
        "isAddressStreetNameMatch": "True",
        "isAddressCityMatch": "True",
        "isAddressPostalCodeMatch": "True",
        "isAddressProvinceMatch": "True",
        "creditFileCreationDate": {
            "day": "12",
            "month": "10",
            "year": "2010"
        },
        "numberOfTrades": "23",
        "familyName": "Roz",
        "singleSourceDecision": "True",
        "dualSourceDecision": null,
        "institutionName": "institute",
        "accountNumber": "45487852",
        "isNameAndDobMatch": "True",
        "isNameAndAddressMatch": "True",
        "isNameAndAccountNumberMatch": "True"
    }
```


<a name="assessmentcompleteobject" title="assessmentComplete Object"></a>
## assessmentComplete
| Element               | Type    | Description                                                       |
|-----------------------|---------|-------------------------------------------------------------------|
|reasonCodes            |[reasonCodes](#reasoncodesobject)   | This is an array of reason codes and descriptions from Equifax.  |

```apib
     "assessmentComplete": {
          "reasonCodes": [
            {
              "description": "Credit file located=Adequate match",
              "code": "51"
            },
            {
              "description": "No Phone record located or poor match score",
              "code": "60"
            },
            {
              "description": "Supplied address same as the current address in the Equifax database",
              "code": "C1"
            },
```

<a name="atomicscoresobject" title="atomicScores Object"></a>
## atomicScores

|Element            |Type                       |Description    |
|---                |---                        |---       |
|interactiveQueryScore  |string                 |**??** |

```apib
    {
        "interactiveQueryScore": -1
    }
```

<a name="currentaddressobject" title="currentAddress Object"></a>
## currentAddress

|Element            |Type                       |Description    |
|---                |---                        |---       |
|apartment          |string<br/>`length<=50`    |This is the consumer's apartment number, if applicable.|
|street             |string<br/>`length<=255`   |This is the first line of the consumer's street address.|
|street2            |string<br/>`length<=255`   |This is the second line of the consumer's street address, if required.|
|city               |string<br/>`length<=255`   |This is the city where the address is located.|
|country            |string<br/>`length=2`      |This is the country where the address is located. See [Country Codes](#countrycodes).|
|state              |string<br/>`length=2`      |This is the state/province/region in which the consumer lives.<br/>For Canada see [Province Codes](#provincecodes). For the United States see [State Codes](#statecodes). Other countries have no restrictions. |
|zip                |string<br/>`length<=10`    |This is the zip, postal, or post code of the consumer's address.|
|phone              |string<br/>`length<=15`    |This is the consumer's phone number.|
|monthsAtAddress    |number                     |This is the number of months the consumer has been living at this address.|

```apib
            {
              "street":"100 Queen Street West",
              "street2":"Unit 201",
              "city":"Toronto",
              "country":"CA",
              "state":"ON",
              "zip":"M5H 2N2",
              "phone":"647-788-3901",
              "monthsAtAddress":"50"
            }
```

<a name="dateobject" title="Date Object"></a>
## Date
|Element            |Type                           |Description    |
|---                |---                            |---            |
|year               |number<br/>`length=4 min=1900` |This is the date year.|
|month              |number<br/>`length=2 max=12`   |This is the date month.|
|day                |number<br/>`length=2 max=31`   |This is the date day.|

```apib
            {
                "year": 1980,
                "month": 12,
                "day": 25
            }
```


<a name="eidcompareobject" title="eidcompare Object"></a>
## eidcompare
| Element                   | Type                                      | Description                                                       |
|---------------------------|---------                                  |-------------------------------------------------------------------|
|id                         |string <br/>`length<=36`                   |This is the *eidcompare* ID generated for the request, returned in the response. |
|status                     |enum                                       |This is the risk decision. Possible values are: <ul><li>SUCCESS</li><li>FAIL</li><li>ERROR</li></ul> |
|response                   |[response](#eidcompareresponseobject)      |   |
|error                      |[error](#errorobject)                      |These are error details in case of any errors occurring while doing the vendor check. |

```apib
    {
        "id": "0f1266b9-ce28-4df2-bc3f-d4b746cc1ced",
        "status": "SUCCESS",
        "response": {
            "assessmentComplete": {
                "reasonCodes": [{
                        "description": "Credit file located=Adequate match",
                        "code": "51"
                    },
                    {
                        "description": "No Phone record located or poor match score",
                        "code": "60"
                    },
                    {
                        "description": "Supplied address same as the current address in the Equifax database",
                        "code": "C1"
                    }
                ],
                "atomicScores": {
                    "interactiveQueryScore": -1
                },
                "decision": "Y",
                "score": 25
            }
        }
    }
```


<a name="eidcompareresponseobject" title="EID Compare Response Object"></a>
## EID Compare response
| Element               | Type    | Description                                                       |
|-----------------------|---------|-------------------------------------------------------------------|
|assessmentComplete     |[assessmentComplete](#assessmentcompleteobject)   |This is an array of reason codes from Equifax. |
|atomicScores           |[atomicScores](#atomicscoresobject) |                                |
|decision               |string   |This is the risk decision returned by Equifax. Possible values are: <ul><li>??</li></ul>                     |
|score                  |string   |This is the overall risk score computed by Equifax.   |

```apib
    {
    
        "assessmentComplete": {
            "reasonCodes": [{
                    "description": "Credit file located=Adequate match",
                    "code": "51"
                },
                {
                    "description": "No Phone record located or poor match score",
                    "code": "60"
                },
                {
                    "description": "Supplied address same as the current address in the Equifax database",
                    "code": "C1"
                }
            ],
            "atomicScores": {
                "interactiveQueryScore": -1
            },
            "decision": "Y",
            "score": 25
        }
    }
```


<a name="errorobject" title="Error Object"></a>
## error
|Element            |Type       |Description       |
|---                |---        |---               |
|code               |string     |The error code.   |
|message            |string     |A description of the error. Also shown in the X-Application-Status-Code response header.  |
|details            |string array |This is the detailed error description, if applicable. |
|fieldErrors        |string array     |Details of any parameter value errors (optional). One or more field:error pairs, where field is the field name and error is the error in the field. |

```apib
{  
   "code":"5068",
   "message":"Either you submitted a request that is missing a mandatory field or the value of a field does not match the format expected.",
   "details":[
     "Illegal unquoted character ((CTRL-CHAR, code 10)): has to be escaped using backslash to be included in string value at  [line: 2, column: 61]"
     ],
   "fieldErrors":[  
      {  
         "field":"locale",
         "error":"Invalid Locale"
      }
   ]
}
```

<a name="profileobject" title="Profile Object"></a>
## profile
|Element            |Type                               |Description    |
|---                |---                                |---            |
|firstName          |string <br/>`length<=80`           |This is the consumer’s first name. |
|middleName         |string <br/>`length<=80`           |This is the consumer’s middle name. |
|lastName           |string <br/>`length<=80`           |This is the consumer’s last name. |
|ssn                |string <br/>`length<=10`           |This is the consumer's Social Security Number. |
|sin                |string <br/>`length<=9`            |This is the consumer's Social Insurance Number. |
|ssnLastFour        |string <br/>`length=4`             |This is the last four digits of the consumer's Social Security Number, returned in the response. |
|sinLastFour        |string <br/>`length=4`             |This is the last four digits of the consumer's Social Insurance Number, returned in the response. |
|email              |string<br/>`length<=128`           |This is the consumer's email address.|
|locale             |enum                               |This indicates the language of the profile. Possible values are:<ul><li>en_CA</li><li>fr_CA</li></ul> |
|currentAddress     |[currentAddress](#addressobject)   |This is the consumer's address. |
|dateOfBirth        |[dateOfBirth](#dateofbirthobject)  |This is the customer's date of birth.|
|previousAddresses  |[previousAddresses](#addressobject) | This is an array of the consumer's previous addresses. **Note:** If *monthsAtAddress* in the *currentAddress* object is 24 or less, the risk check request will have a greater probability of being successful if a previous address is included.|

```apib
    {
        "firstName": "John",
        "lastName": "Smith",
        "sin": "123456789",
        "email": "john.smith@myemail.com",
        "dateOfBirth": {
            "year": 1980,
            "month": 12,
            "day": 25
        },
        "currentAddress": {
            "street": "100 Queen Street West",
            "street2": "Unit 201",
            "city": "Toronto",
            "country": "CA",
            "state": "ON",
            "zip": "M5H 2N2",
            "phone": "647-788-3901",
            "monthsAtAddress":"50"
        }
    }
```

<a name="providerresponsesobject" title="providerResponses Object"></a>
## providerResponses
| Element               | Type    | Description                                                       |
|-----------------------|---------|-------------------------------------------------------------------|
|amlassist              |[amlassist](#amlassistobject) |                   |
|eidcompare             |[eidcompare](eidcompareobject)|  |

```apib
    {
        "providerResponses": {
            "eidcompare": {
                "id": "0f1266b9-ce28-4df2-bc3f-d4b746cc1ced",
                "status": "SUCCESS",
                "response": {
                    "assessmentComplete": {
                        "reasonCodes": [{
                                "description": "Credit file located=Adequate match",
                                "code": "51"
                            },
                            {
                                "description": "No Phone record located or poor match score",
                                "code": "60"
                            },
                            {
                                "description": "Supplied address same as the current address in the Equifax database",
                                "code": "C1"
                            }
                        ],
                        "atomicScores": {
                            "interactiveQueryScore": -1
                        },
                        "decision": "Y",
                        "score": 25
                    }
                },
                "amlassist": {
                    "id": "0f1266b9-ce28-4df2-bc3f-d4b746cc1ced",
                    "status": "SUCCESS",
                    "response": {
                        "creditFileNumber": "65462",
                        "creditFileGreaterThanThreeYearsOld": "True",
                        "isSingleSourceHit": "True",
                        "isDualSourceHit": "False",
                        "isLastNameMatched": "True",
                        "isFirstNameMatched": "True",
                        "isMiddleNameMatched": "True",
                        "isDateOfBirthMatch": "True",
                        "isAddressCivicMatch": "True",
                        "isAddressStreetNameMatch": "True",
                        "isAddressCityMatch": "True",
                        "isAddressPostalCodeMatch": "True",
                        "isAddressProvinceMatch": "True",
                        "creditFileCreationDate": {
                            "day": "12",
                            "month": "10",
                            "year": "2010"
                        },
                        "numberOfTrades": "23",
                        "familyName": "Roz",
                        "singleSourceDecision": "True",
                        "dualSourceDecision": null,
                        "institutionName": "institute",
                        "accountNumber": "45487852",
                        "isNameAndDobMatch": "True",
                        "isNameAndAddressMatch": "True",
                        "isNameAndAccountNumberMatch": "True"
                    }
                }
            }
        }
    }
```

<a name="reasoncodesobject" title="reasonCodes Object"></a>
## reasonCodes
| Element               | Type    | Description                                                       |
|-----------------------|---------|-------------------------------------------------------------------|
|description            |string   |This is a comment on the request by Equifax.                       |
|code                   |number   |This is a code returned by Equifax.  |

```apib
    {
        "reasonCodes": [{
                "description": "Credit file located=Adequate match",
                "code": "51"
            },
            {
                "description": "No Phone record located or poor match score",
                "code": "60"
            },
            {
                "description": "Supplied address same as the current address in the Equifax database",
                "code": "C1"
            }
        ]
    }
```

# Error Summary

<a name="commonerrors" title="Common Errors"></a>
## Common Errors
|HTTP Status Code       |Error Code    |Description|
|---                    |---           |---|
|500                    |1000           |An internal error occurred.         |
|502                    |1001           |An error occurred with the external processing gateway.|
|500                    |1002           |An internal error occurred.            |
|500                    |1003           |An internal error occurred.            |
|500                    |1007           |An internal error occurred.            |
|500                    |1008           |An internal error occurred.            |
|429                    |1200           |The API call has been denied as it has exceeded the permissible call rate limit.|
|401                    |5000           |Your merchant account authentication failed. Either your store ID/password are invalid or the IP address from which you are sending the transaction has not been authorized.|
|400                    |5001           |The submitted currency code is invalid or your account does not support this currency.|
|400                    |5003           |You submitted an invalid amount with your request.|
|400                    |5004           |You submitted an invalid account type with your request.|
|400                    |5005           |You submitted an invalid operation type with your request.|
|400                    |5010           |The submitted country code is invalid.|
|400                    |5016           |The merchant account you provided cannot be found.|
|400                    |5017           |The merchant account you provided is disabled.|
|402                    |5021           |Your transaction request has been declined.|
|400                    |5023           |The request is not parseable.|
|409                    |5031           |The transaction you have submitted has already been processed.|
|401                    |5040           |Your merchant account is not configured for the transaction you attempted.|
|400                    |5042           |The merchant reference number is missing or invalid or it exceeds the maximum permissible length.|
|400                    |5068           |Either you submitted a request that is missing a mandatory field or the value of a field does not match the format expected.|
|404                    |5269           |The ID(s) specified in the URL do not correspond to the values in the system.|
|403                    |5270           |The credentials provided with the request do not have permission to access the requested data.|
|406                    |5271           |You requested a response in the 'Accept' header that is in an unsupported format.|
|406                    |5272           |The 'Content-Type' you specified in request header was submitted in an unsupported format.|
|404                    |5273           |Your client reached our application but we were unable to service your request due to an invalid URL.|
|401                    |5275           |The authentication credentials provided with the request have expired.|
|401                    |5276           |The authentication credentials provided with the request provided have been disabled.|
|401                    |5277           |The authentication credentials provided with the request have been locked due to multiple authentication failures.|
|401                    |5278           |The authentication credentials provided with the request were not accepted for an unknown reason.|
|401                    |5279           |The authentication credentials are invalid.|
|401                    |5280           |The required authentication credentials were not provided.|
|405                    |5281           |The request uses an action (e.g., GET, POST, or PUT) that is not supported by the resource.|
|400                    |5502           |Either the payment token is invalid or the corresponding profile or bank account is not active.|

<a name="riskcheckerrors" title="Risk Check Errors"></a>
## Customer Vault Errors
|HTTP Status Code       |Error Code |Description|
|---                    |---        |---|
|409                    |           |  |

**ERROR CODES TO COME FROM DEVELOPERS**


# Using the example API calls (Console Window)
To configure and test the API examples, first click on one of the API calls in the API Reference section and then click **Switch to Console** in the right hand pane. 
Using the Console window you can update the headers, the request body, and parts of the API endpoint.
You must update the Header to include your API Key by selecting **Headers** and then updating the **Authorization** value using the Base64
version of your API key. To get your API key, log into the test version of the Merchant Back Office and choose **Settings > API Key**. 
Click *View Base 64 Encoded* and copy the key to your clipboard. Paste the key after the word Basic to replace the text YOUR-BASE64-ENCODED-API-KEY.
When you are ready to test your example, you can choose between the Production and Mock server environment:
* Production server – This calls the resource on Paysafe's Test system. 
* Mock server – This environment simply returns the dummy values in the example response irrespective of the parameters you supply. You do not need to use your account ID or Test API key for this request.

To call the API resource, click **Call Resource**. The response is displayed in the Console window.

# Legal and Community
<ul>
<li><a href="https://www.paysafe.com/paysafegroup/privacy-policy/" target="_blank">Privacy Policy</a></li>
<li><a href="https://developer.paysafe.com/en/resources-and-support/terms-of-use/" target="_blank">Terms of Use</a></li>
<li><a href="https://www.paysafe.com/paysafegroup/regulatory-disclosures/" target="_blank">Regulatory Disclosures</a></li>
<li><a href="http://community.paysafe.com/spaces/11/index.html" target="_blank">FAQs</a></li>
<li><a href="http://community.paysafe.com/index.html" target="_blank">Community</a></li>
</ul>

## Verify That the Service Is Accessible [GET /monitor]
<a name="verifyservice" title="Verify Service"></a>

This call returns a status of READY if the API is available.

+ Response 200 (application/json)

  + Body
    
            {
                "status" : "READY"
            }

# Risk Check [/riskprofiles]
<a name="riskcheckrequest" title="Risk Check Request"></a>

## Run a Risk Check [POST /riskprofiles/v1]
<a name="riskcheckrequest" title="Run a Risk Check"></a>

This is how you submit a risk check request. 

+ Attributes
    + Include Risk Check

+ Request Risk Check (application/json)

    + Headers
    
            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body

            {
                "merchantRefNum": "KYC_1520461749",
                "profile": {
                    "firstName": "John",
                    "lastName": "Smith",
                    "email": "john.smith@myemail.com",
                    "currentAddress": {
                        "street": "100 Queen Street West",
                        "street2": "Unit 201",
                        "city": "Toronto",
                        "state": "ON",
                        "country": "CA",
                        "zip": "M5H 2N2",
                        "monthsAtAddress": "50",
                        "phone": "647-788-3901"
                    },
                    "dateOfBirth": {
                        "day": "25",
                        "month": "12",
                        "year": "1980"
                    },
                    "sin": "123456789"
                },
                "customerIp": "1.1.1.1",
                "vendorCheck": "eidcompare"
            }
            
+ Response 200 (application/json)

    + Body

            {
                "id": "86dcb68d-cbd0-4878-8da7-ffc0e6554513",
                "decision": "SUCCESS",
                "merchantRefNum": "KYC_1520461749",
                "profile": {
                    "firstName": "John",
                    "lastName": "Smith",
                    "email": "john.smith@myemail.com",
                    "currentAddress": {
                        "street": "100 Queen Street West",
                        "street2": "Unit 201",
                        "city": "Toronto",
                        "state": "ON",
                        "country": "CA",
                        "zip": "M5H 2N2",
                        "monthsAtAddress": "50",
                        "phone": "647-788-3901"
                    },
                    "dateOfBirth": {
                        "day": "25",
                        "month": "12",
                        "year": "1980"
                    },
                    "sinLastFour": "6789"
                },
                "customerIp": "1.1.1.1",
                "workflowId": "LOW_RISK",
                "vendorCheck": "eidcompare",
                "providerResponses": {
                    "eidcompare": {
                        "id": "eidcomapreResId",
                        "status": "SUCCESS",
                        "response": {
            
                            "assessmentComplete": {
                                "reasonCodes": [{
                                    "description": "Telephone exchange does not match the FSA (first three characters) of the postal code for Current Address",
                                    "code": "08"
                                }],
                                "atomicScores": {
                                    "interactiveQueryScore": -1
                                },
                                "decision": "Y",
                                "score": 25
                            }
                        },
                        "amlassist": {
                            "id": "amlassistResId",
                            "status": "SUCCESS",
                            "response": {
                                "creditFileNumber": "65462",
                                "creditFileGreaterThanThreeYearsOld": "True",
                                "isSingleSourceHit": "True",
                                "isDualSourceHit": "False",
                                "isLastNameMatched": "True",
                                "isFirstNameMatched": "True",
                                "isMiddleNameMatched": "True",
                                "isDateOfBirthMatch": "True",
                                "isAddressCivicMatch": "True",
                                "isAddressStreetNameMatch": "True",
                                "isAddressCityMatch": "True",
                                "isAddressPostalCodeMatch": "True",
                                "isAddressProvinceMatch": "True",
                                "creditFileCreationDate": {
                                    "day": "12",
                                    "month": "10",
                                    "year": "2010"
                                },
                                "numberOfTrades": "23",
                                "familyName": "Roz",
                                "singleSourceDecision": "True",
                                "dualSourceDecision": null,
                                "institutionName": "institute",
                                "accountNumber": "45487852",
                                "isNameAndDobMatch": "True",
                                "isNameAndAddressMatch": "True",
                                "isNameAndAccountNumberMatch": "True"
            
                            }
                        }
                    }
                }
            }


# Data Structures

## Risk Check

+ `id`: `25f6dadf-176a-415f-95c9-6ff39ff697ba` (string) - This is the ID returned in the response.

    _Read Only_, _length<=36_

+ `decision`: `SUCCESS` (enum) - This is the overall risk check decision.

    + Members
        + `SUCCESS`
        + `FAIL`
        + `ERROR`
        + `OUTSORT`

+ `merchantRefNum`: `P1234` (string, required) - This is the merchant reference number created by the merchant and submitted as part of the request.

    _length<=255_

+ `amount`: `100` (number, required) - This is the amount of the request, in minor units.

    _max=99999999999_